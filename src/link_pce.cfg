# PCE link script config

MEMORY {
	#-- RAM sections --#
	ZP:     start = $0000, size = $100, type = rw;
	# Assumes hardware page $F8 is in MPR1 ($2000-$3FFF).
	# First $100 bytes = ZP; next $100 = stack. free RAM begins at $2200.
	RAM:    start = $2200, size $1E00, type = rw, define = yes;

	#-- ROM sections --#
	# reset bank and hardware vectors (MPR7)
	ROM00:   start = $E000, size = $1FF6, file = %O, fill = yes, bank = $00, fillval = $FF, define = yes;
	VECTORS: start = $FFF6, size = $000A, file = %O, fill = yes;

	# ROM01: MPR4 ($8000-$9FFF)
	ROM01:   start = $8000, size = $2000, file = %O, fill = yes, bank = $01, fillval = $FF, define = yes;
	# ROM02: MPR5 ($A000-$BFFF)
	ROM02:   start = $A000, size = $2000, file = %O, fill = yes, bank = $02, fillval = $FF, define = yes;
	# ROM03: MPR6 ($C000-$DFFF)
	ROM03:   start = $C000, size = $2000, file = %O, fill = yes, bank = $03, fillval = $FF, define = yes;
}

SEGMENTS {
	ZEROPAGE: load = ZP,    type = zp;
	BSS:      load = RAM,   type = bss, define = yes;

	CODE:     load = ROM00, type = ro,  define = yes;
	PCE_VECTORS:  load = VECTORS, type = ro,  define = yes;

	BANK01:   load = ROM01, type = ro, align=$100, define = yes;
	BANK02:   load = ROM02, type = ro, align=$100, define = yes;
	BANK03:   load = ROM03, type = ro, align=$100, define = yes;
}

SYMBOLS {
	__PCE_ZP_START__: type = export, value = __RAM_START__-$200;
}
